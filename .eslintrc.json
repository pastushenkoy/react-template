{
	"env": {
		"browser": true,
		"es6": true,
		"es2017": true,
		"jest": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:react/recommended",
		"plugin:@typescript-eslint/eslint-recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"prettier"
	],
	"settings": {
		"react": {
			"createClass": "createReactClass", // Regex for Component Factory to use,
			"pragma": "React", // Pragma to use, default to "React"
			"version": "detect", // React version. "detect" automatically picks the version you have installed.
			// You can also use `16.0`, `16.3`, etc, if you want to override the detected value.
			// default to latest and warns if missing
			// It will default to "detect" in the future
			"flowVersion": "0.53" // Flow version
		},
		"propWrapperFunctions": [
			// The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.
			"forbidExtraProps",
			{ "property": "freeze", "object": "Object" },
			{ "property": "myFavoriteWrapper" }
		],
		"linkComponents": [
			// Components used as alternatives to <a> for linking, eg. <Link to={ url } />
			"Hyperlink",
			{ "name": "Link", "linkAttribute": "to" }
		]
	},
	"globals": {
		"Atomics": "readonly",
		"SharedArrayBuffer": "readonly"
	},
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"sourceType": "module",
		"project": "tsconfig.json",
		"tsconfigRootDir": ".",
		"ecmaFeatures": {
			"jsx": true
		}
	},
	"plugins": ["@typescript-eslint", "prettier", "react", "react-hooks"],
	"rules": {
		"prettier/prettier": ["error"],
		"@typescript-eslint/explicit-function-return-type": ["off"],
		"@typescript-eslint/no-explicit-any": "off",
		"@typescript-eslint/member-delimiter-style": [
			"error",
			{
				"multiline": {
					"delimiter": "none",
					"requireLast": false
				},
				"singleline": {
					"delimiter": "semi",
					"requireLast": false
				}
			}
		],
		"@typescript-eslint/no-unused-vars": [
			"error",
			{
				"argsIgnorePattern": "^_"
			}
		],
		"react/prop-types": "off",
		"react/jsx-uses-react": "error",
		"react/jsx-uses-vars": "error",
		"react-hooks/rules-of-hooks": "error",
		"react-hooks/exhaustive-deps": "error",
		"no-console": "error",
		"no-unused-expressions": "error"
	}
}
